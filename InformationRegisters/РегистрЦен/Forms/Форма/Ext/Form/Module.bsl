Процедура ОбновитьТблОбр()
	
	Запрос = новый Запрос;
	ЗАпрос.Текст = "
	|ВЫБРАТЬ 
	| 	ЗаказНаряд
	|INTO врТбл
	|FROM  РегистрНакопления.ОстатокРО.остатки Рег
	|
	|UNION ALL
	|
	|ВЫБРАТЬ 
	| 	ЗаказНаряд
	|FROM  РегистрНакопления.РаботаРО.остатки Рег
	|
	|;
	|               ВЫБРАТЬ DISTINCT
	               |	ро_Оборудование.Ссылка КАК Оборудование,
	               |	ро_Оборудование.Диаметр КАК Диаметр,
	               |	ро_Оборудование.Давление КАК Давление,
	               |	ISNULL(спрРАб.ссылка,ISNULL(Рег.Цена,0)) КАК Цена,
	               |	ро_Оборудование.Родитель.Наименование КАК Родитель
	               |ИЗ
	               |	врТбл КАК ОстатокРО
				   
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.роЗаказНаряд КАК роЗаказНаряд
	               |		ПО ОстатокРО.ЗаказНаряд = роЗаказНаряд.Ссылка
				   
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ро_Оборудование КАК ро_Оборудование
	               |		ПО роЗаказНаряд.Оборудование = ро_Оборудование.Ссылка
				   |
				   |    LEFT OUTER JOIN РегистрСведений.РегистрЦен Рег ON Рег.Контрагент   = роЗаказНаряд.Контрагент
				   |                                                    и Рег.Оборудование = роЗаказНаряд.Оборудование
				   |
				   |
				   |    LEFT OUTER JOIN Справочник.ро_РаботыПоПрайсу спрРАб ON спрРАб.ссылка = Рег.Работа
				   |
	               |ГДЕ
	               |	роЗаказНаряд.Контрагент = &Контрагент";
	Запрос.УстановитьПараметр("Контрагент",Контрагент);
	
	Тбл =Запрос.Выполнить().Выгрузить();
	Тбл.Сортировать("Родитель,Диаметр,Давление,цена");
	
	текЦена=Неопределено;
	текГрп=Неопределено;
	масНС = Новый Массив;
	текСтк = Неопределено;
	
	пТ = новый ТаблицаЗначений;
	пТ.Колонки.Добавить("цена");
	пТ.Колонки.Добавить("Кол",Новый ОписаниеТипов("Число"));
	
	
	Для а=1 по Тбл.Количество() Цикл
		Стр = Тбл[а-1];
		
		Если Стр.РОдитель<>текГрп Тогда
			 текГрп = Стр.РОдитель;
			 текЦена = Неопределено;
		КонецЕСЛИ;
		
		Если  Стр.цена <>ТекЦена Тогда
			
			Если текСтк<>Неопределено Тогда
				предСтр = ТБл[а-2];
				ЕСли предСтр.Диаметр=Стр.Диаметр и предСтр.Давление=Стр.Давление и текЦена <> Неопределено Тогда
					продолжить;
				КонецЕсли;	
				
				пТ.Свернуть("цена","Кол");
				пТ.Сортировать("Кол desc");
				
				текСтк.Вставить("Цена",пТ[0].Цена);
				текСтк.Вставить("конДиа",предСтр.Диаметр);
				текСтк.Вставить("конДав",предСтр.Давление);
				масНС.Добавить(текСтк);
				
				пТ.Очистить();
			КонецЕсли;
			
			текЦена = Стр.Цена;
			текСтк = Новый Структура("начДиа,начДав,нс,Родитель",Стр.Диаметр,стр.Давление,а-1,Стр.Родитель);
		КонецЕсли;
		
		пСтр = пТ.Добавить();
		пСтр.Цена = Стр.Цена;
		пСтр.Кол = 1;
		
	Конеццикла;
	
	Если текСтк<>Неопределено Тогда
		предСтр = ТБл[а-2];
		
		пТ.Свернуть("цена","Кол");
		пТ.Сортировать("Кол desc");
		
		текСтк.Вставить("Цена",пТ[0].Цена);
		текСтк.Вставить("конДиа",предСтр.Диаметр);
		текСтк.Вставить("конДав",предСтр.Давление);
		текСтк.Вставить("Цена",предСтр.Цена);
		масНС.Добавить(текСтк);
	КонецЕсли;
	
	тблОбр.Загрузить(Тбл);
	
	послНС = тблОбр.Количество();
	Для а=-масНС.Количество() по -1 Цикл
		
		Стк = масНС[-а-1];
		
		
		новСтр = тблОбр.Вставить(Стк.нс);
		новСтр.Оборудование = Стк.РОдитель;
		новСтр.Диаметр  	= ФРМДиаметрДавление("Dy =",Стк.начДиа,Стк.конДИа); 
		новСтр.Давление 	= ФРМДиаметрДавление("Py =",Стк.начДав,Стк.конДав); 
		новСТр.Цена 		= Стк.цена;
		новСтр.БазЦена      = Стк.цена;
		новСТр.индОФр 		= 1;
		
	КонецЦикла;
	
	пЦена=0;
	Для каждого Стр из тблОбр Цикл
		Если стр.индОФр = 1 ТОгда
			пЦена = Стр.БазЦена;
		ИНаче
			Стр.БазЦена = пЦена;
		КонецЕСЛИ;
	Конеццикла;
	
КонецПроцедуры

Функция ФРМДиаметрДавление(рек,нач,кон)
	Если нач=0 и кон=0 ТОгда
		Возврат "";
	КонецЕСЛИ;
	
	Если нач=кон ТОгда
		Возврат Рек+" "+Нач;
	ИНачеЕсли Нач=0 Тогда
		Возврат рек+" меньше "+кон;
	ИНачеЕсли Кон=0 ТОгда
		Возврат рек+" от "+нач+" и более";
	ИНаче
		Возврат рек+" "+Нач+"-"+кон;
	КонецЕСлИ;
	
		
КонецФункции

&НаКлиенте
Процедура ОбновитьТбл(Команда)
	ОбновитьТблОбр();
	ВидимостьКрасныхЦен();
КонецПроцедуры

&НаСервере
Процедура Команда1НаСервере()
	Запрос = новый Запрос;
	Запрос.Текст = "
	            	| SELECT DISTINCT
					| роЗаказНаряд.Контрагент,
					|  роЗаказНаряд.Оборудование
					|INTO врТБл
					|FROM РегистрНакопления.ОстатокРО КАК ОстатокРО
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.роЗаказНаряд КАК роЗаказНаряд
	               |		ПО ОстатокРО.ЗаказНаряд = роЗаказНаряд.Ссылка
					|
					|
					|
					|   ;
	
	
	               |SELECT
				   |    Рег.Контрагент Контрагент,
	               |	Спр.ссылка КАК Оборудование,
				   |    Рег.Цена Цена
	               |ИЗ
	               |	 Справочник.ро_Оборудование Спр 
				   |INNER JOIN врТбл ТБл ON Тбл.Оборудование = Спр.ссылка
				   |INNER JOIN РегистрСведений.Прайс.СрезПоследних Рег ON Рег.Контрагент = Тбл.Контрагент
				   |                                           и Рег.Оборудование  = Спр.родитель 
				   |                                           и (Рег.ДиаметрОт   <= Спр.Диаметр  или Рег.ДиаметрОт = 0)
				   |                                           и (Рег.ДиаметрДо   >= Спр.Диаметр  или Рег.ДиаметрДо = 0)
				   |                                           и (Рег.ДавлениеОт  <= Спр.Давление или Рег.ДавлениеОт = 0)
				   |                                           и (Рег.ДавлениеДо  >= Спр.Давление или Рег.ДавлениеДо = 0)
				   |
				   |WHERE   Спр.ЭтоГРуппа = ложь
				   |
				   |";
	
	
	
	Тбл = Запрос.Выполнить().Выгрузить();
	Наб = РегистрыСведений.РегистрЦен.СоздатьНаборЗаписей();
	Наб.Загрузить(Тбл);
	Наб.Записать();
	
	
	
КонецПроцедуры

&НаКлиенте
Процедура Команда1(Команда)
	Команда1НаСервере();
КонецПроцедуры

&НаСервереБезКонтекста
Процедура тблОбрЦенаПриИзмененииНаСервере(КА,Обр,Цена)
	
	Зап = РегистрыСведений.РегистрЦен.СоздатьМенеджерЗаписи();
	Зап.Контрагент = КА;
	Зап.Оборудование = Обр;
	Если типЗнч(Цена)=Тип("СправочникСсылка.ро_РаботыПоПрайсу") Тогда
		Зап.Работа = Цена;
	Иначе
		Зап.Цена = Цена;
	КонецЕсли;
	ЗАп.Записать();
	
КонецПроцедуры

&НаКлиенте
Процедура тблОбрЦенаПриИзменении(Элемент)
	ТекСтр = Элементы.тблОбр.ТекущиеДанные;
	тблОбрЦенаПриИзмененииНаСервере(Контрагент,текСтр.Оборудование,текСтр.Цена);
	ВидимостьКрасныхЦен();
КонецПроцедуры

&НаКлиенте
Процедура КраснаяЦена(Команда)
	
	Если Элементы.тблОбр.ТекущиеДанные=Неопределено Тогда 
		начА=1; 
	ИНаче
		начА = тблОбр.Индекс(Элементы.тблОбр.ТекущиеДанные)+1;
	КонецЕСЛИ;
	
	конА = тблОбр.Количество()-1;
	ДЛя i=1 to 2 DO
		ДЛя а = начА  по конА Цикл
			Если тблОбр[а].цена = 0 и тблОбр[а].индОфр=0 Тогда
				элементы.тблОбр.ТекущаяСтрока= тблОБр[а].ПолучитьИдентификатор();
				прервать;
			КонецЕСЛИ;
		КонецЦикла;
		
		Если а>конА Тогда
			конА = МИН(тблОбр.Количество(),начА);
			начА = 1;
		иначе
			прервать;
		КонецЕСЛИ;
	EndDO;
	
КонецПроцедуры

&НаКлиенте
Процедура ВидимостьКрасныхЦен()
	
	кол=0;
	ДЛя каждого Стр из ТблОбр Цикл
		Если Стр.индОфр = 0 и (Стр.Цена = 0 или Стр.Цена = Неопределено) Тогда
			кол=Кол+1;
		КонецЕСЛИ;
	КонецЦикла;
	
	текстКолКрасныхЦен = "Красных цен - "+кол;
	Элементы.грпКрасныхЦен.Видимость = кол<>0;
	
КонецПроцедуры

&НаКлиенте
Процедура тблОбрВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если  Элементы.тблОбр.ВыделенныеСтроки.Количество()>1 Тогда
		ОткрытьМасВводЦены(Элемент);
		СтандартнаяОбработка = Ложь;
		Возврат; 
	КонецеСЛИ;
	
	
	ТекСтр = Элементы.тблОбр.ТекущиеДанные;
	Если текСтр.индОфр<>0 Тогда 
		СтандартнаяОбработка = Ложь;
		Возврат; 
	КонецЕсли;
	
	Если Поле.имя <> "тблОбрЦена" Тогда
		СтандартнаяОбработка = Ложь;
		ПоказатьЗначение(,текСтр.Оборудование);
	КонецеСЛИ;
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьМасВводЦены(Команда)
	ТекСтр = Элементы.тблОбр.ТекущиеДанные;
	Стк = Новый Структура;
	Стк.Вставить("Цена",ТекСтр.Цена);
	Стк.Вставить("Контрагент",Контрагент);
	
	оо =Новый ОписаниеОповещения("ОкончаниеВыбораЦены",ЭтотОбъект);
	
	ОткрытьФорму("РегистрСведений.РегистрЦен.Форма.ФормаВыбораЦены",Стк,ЭтаФорма,ЭтаФорма,,,оо,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры

&НаКлиенте
Процедура  ОкончаниеВыбораЦены(Рез,Параметры) Экспорт
	
	Если Рез = Неопределено Тогда Возврат; КонецЕслИ;
	
	Для каждого Эл из Элементы.тблОбр.ВыделенныеСтроки Цикл
		текСтр = тблОбр.НайтиПоИдентификатору(Эл);	
		Если текСтр.индОфр <> 0 ТОгда Продолжить; КонецЕсли;
		текСтр.Цена = Рез;
		тблОбрЦенаПриИзмененииНаСервере(Контрагент,текСтр.Оборудование,текСтр.Цена);
	КонецЦикла;
	
	ВидимостьКрасныхЦен();
КонецПроцедуры
