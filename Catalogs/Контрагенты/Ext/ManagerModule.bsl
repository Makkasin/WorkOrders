
Функция СткПолучитьСоединение() Экспорт
	
	Стк = Новый Структура();
	
	Стк.Вставить("Сервер","azure1c.westeurope.cloudapp.azure.com");
	Стк.Вставить("Порт",80);
	Стк.Вставить("Логин","Serv");
	Стк.Вставить("Пароль","SERVgfhjkm");
	                           
	Возврат Стк;
	
КонецФункции

Функция СделатьЗапрос(Метод) Экспорт
	
	СткСоединение = СткПолучитьСоединение();
	
	Соединение = Новый HTTPСоединение(
									СткСоединение.Сервер, // сервер (хост)
									СткСоединение.Порт, // порт, по умолчанию для http используется 80, для https 443
									СткСоединение.Логин, // пользователь для доступа к серверу (если он есть)
									СткСоединение.Пароль, // пароль для доступа к серверу (если он есть)
									, // здесь указывается прокси, если он есть
									, // таймаут в секундах, 0 или пусто - не устанавливать
									// защищенное соединение, если используется https
									);
	Запрос = Новый HTTPЗапрос("/BP_US/hs/invAPI/"+Метод);
	Результат = Соединение.GET(Запрос);
	
	Если Результат.КодСостояния <> 200 Тогда 
		Сообщить("Ошибка отправки: "+Результат.КодСостояния);
		Сообщить(результат.ПолучитьТелоКакСтроку());
		Возврат Неопределено;
	КонецЕСЛИ;  
	
	Возврат XMLЗначение(Тип("ХранилищеЗначения"),результат.ПолучитьТелоКакСтроку()).Получить()[1];
	
	
КонецФункции

Функция ЗагрузитьКА(ГУИД) Экспорт
	
	Если СокрлП(ГУИД)="" ТОгда
		Сообщить("Нет данных для переноса");
		Возврат Неопределено;
	КонецеСЛИ;
	
	
	оТбл = СделатьЗапрос("LOADKAFLT?idKA="+ГУИД);
	Если оТбл.Количество()=0 Тогда Сообщить("Нет данных!"); Возврат Неопределено; КонецеСЛИ;

	
	
	сс = Справочники.Контрагенты.ПолучитьСсылку(Новый УникальныйИдентификатор(ГУИД));
	
	Если ЗначениеЗаполнено(сс) = Ложь ТОгда Возврат Неопределено; КонецеСЛИ;
	Если НАйти(СокрЛП(сс),"<Объект не найден") ТОгда
		
		Обк = Справочники.Контрагенты.СоздатьЭлемент();
		обк.УстановитьСсылкуНового(сс);
	ИНаче
		Обк = сс.ПолучитьОбъект();
	КонецЕСЛИ;
	
	оСС = оТбл[0];
	Обк.Код = оСС.КодКА;
	Обк.Наименование = оСС.НаименованиеКА;
	Обк.ИНН = оСС.ИНН;
	Обк.КПП = оСС.КПП;
	Обк.НаименованиеПолное = оСС.НаименованиеПолноеКА;
	Сообщить("Записан контрагент "+Обк.Наименование);
	Обк.КонтактнаяИнформация.Загрузить(оТБл);
	обк.Записать();
	
	
	Возврат Обк.ссылка;
	
КонецФункции

Функция ПолучитьЮрАдрес(сс) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	КонтрагентыКонтактнаяИнформация.Представление КАК Представление
	               |ИЗ
	               |	Справочник.Контрагенты.КонтактнаяИнформация КАК КонтрагентыКонтактнаяИнформация
	               |ГДЕ
	               |	КонтрагентыКонтактнаяИнформация.Ссылка = &Ссылка
	               |	И КонтрагентыКонтактнаяИнформация.Тип = &Тип";
	Запрос.УстановитьПараметр("ссылка",сс);
	Запрос.УстановитьПараметр("Тип",Перечисления.ТипыКонтактнойИнформации.ЮрАдресОрганизации);
	
	Выб = Запрос.Выполнить().Выбрать();
	Если Выб.Следующий() Тогда
		Возврат Выб.Представление;
	ИНаче
		Возврат Неопределено;
	КонецЕСЛИ;
	
КонецФункции