
Функция НайтиЭлементСПечФормами(сс) Экспорт
	
	имяСпр = сс.метаданные().имя;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ TOP 1
	               |	КонтрагентыПечатныеФормы.Ссылка КАК Ссылка
	               |ИЗ
	               |	Справочник."+имяСпр+".ПечатныеФормы КАК КонтрагентыПечатныеФормы
				   |
	               |ГДЕ
	               |	КонтрагентыПечатныеФормы.Ссылка = &Ссылка
				   |
				   |UNION ALL
				   |
				   |ВЫБРАТЬ TOP 1
	               |	КонтрагентыПечатныеФормы.Ссылка КАК Ссылка
	               |ИЗ
	               |	       Справочник."+имяСпр+".ПечатныеФормы КАК КонтрагентыПечатныеФормы
	               |INNER JOIN Справочник."+имяСпр+" КАК ПЕч ON Печ.Родитель  = КонтрагентыПечатныеФормы.Ссылка
				   |
	               |ГДЕ
	               |	ПЕч.Ссылка = &Ссылка
				   |
				   |UNION ALL
				   |
				   |ВЫБРАТЬ TOP 1
	               |	КонтрагентыПечатныеФормы.Ссылка КАК Ссылка
	               |ИЗ
	               |	       Справочник."+имяСпр+".ПечатныеФормы КАК КонтрагентыПечатныеФормы
	               |INNER JOIN Справочник."+имяСпр+" КАК ПЕч1 ON Печ1.Родитель  = КонтрагентыПечатныеФормы.Ссылка
	               |INNER JOIN Справочник."+имяСпр+" КАК ПЕч0 ON Печ0.Родитель  = Печ1.Ссылка
				   |
	               |ГДЕ
	               |	Печ0.Ссылка = &Ссылка
				   | ";
	Запрос.УстановитьПараметр("ссылка",сс);
		
	
	Выб = Запрос.Выполнить().Выбрать();
	Если Выб.Следующий() Тогда
		Возврат Выб.ссылка;
	ИНаче
		Возврат сс;
	КонецЕСЛИ;
	
КонецФункции

Функция НайтиПечФормы(сс,ФильтрКонтрагент) Экспорт
	
	имяСпр = сс.метаданные().имя;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ 
	               |	КонтрагентыПечатныеФормы.ПечФорма КАК ПечФорма,
	               |	КонтрагентыПечатныеФормы.ИспользоватьВДокументах КАК ИспользоватьВДокументах
				   |INTO врТбл
	               |ИЗ
	               |	Справочник."+имяСпр+".ПечатныеФормы КАК КонтрагентыПечатныеФормы
				   |
	               |ГДЕ
	               |	КонтрагентыПечатныеФормы.Ссылка = &Ссылка
				   |  и (КонтрагентыПечатныеФормы.Контрагент = &КА или КонтрагентыПечатныеФормы.Контрагент = Значение(Справочник.Контрагенты.ПустаяСсылка) )
				   |
				   |UNION ALL
				   |
				   |ВЫБРАТЬ 
	               |	КонтрагентыПечатныеФормы.ПечФорма КАК ПечФорма,
	               |	КонтрагентыПечатныеФормы.ИспользоватьВДокументах КАК ИспользоватьВДокументах
	               |ИЗ
	               |	       Справочник."+имяСпр+".ПечатныеФормы КАК КонтрагентыПечатныеФормы
	               |INNER JOIN Справочник."+имяСпр+" КАК ПЕч ON Печ.Родитель  = КонтрагентыПечатныеФормы.Ссылка
				   |
	               |ГДЕ
	               |	 Печ.Ссылка = &Ссылка
				   |  и (КонтрагентыПечатныеФормы.Контрагент = &КА или КонтрагентыПечатныеФормы.Контрагент = Значение(Справочник.Контрагенты.ПустаяСсылка) )
				   |
				   |UNION ALL
				   |
				   |ВЫБРАТЬ 
	               |	КонтрагентыПечатныеФормы.ПечФорма КАК ПечФорма,
	               |	КонтрагентыПечатныеФормы.ИспользоватьВДокументах КАК ИспользоватьВДокументах
	               |ИЗ
	               |	       Справочник."+имяСпр+".ПечатныеФормы КАК КонтрагентыПечатныеФормы
	               |INNER JOIN Справочник."+имяСпр+" КАК ПЕч1 ON Печ1.Родитель  = КонтрагентыПечатныеФормы.Ссылка
	               |INNER JOIN Справочник."+имяСпр+" КАК ПЕч0 ON Печ0.Родитель  = Печ1.Ссылка
				   |
	               |ГДЕ
	               |	Печ0.Ссылка = &Ссылка
				   |  и (КонтрагентыПечатныеФормы.Контрагент = &КА или КонтрагентыПечатныеФормы.Контрагент = Значение(Справочник.Контрагенты.ПустаяСсылка) )
				   |;
				   |
				   |SELECT DISTINCT
				   | Спр.Наименование,
				   | Спр.Код,
				   | Тбл.ИспользоватьВДокументах
				   |
				   |FROM Справочник.ПечатныеФормы Спр
				   |INNER JOIN врТбл Тбл ON Тбл.ПечФорма = Спр.Ссылка
				   |
				   |
				   | ";
	Запрос.УстановитьПараметр("ссылка",сс);
	Запрос.УстановитьПараметр("КА",ФильтрКонтрагент);
	Возврат Запрос.Выполнить().Выгрузить();	
	
КонецФункции

Процедура ДобавитьКнопкиПечати(Форма,элементСпрСС,ИмяМакетПоУмолчанию = "Накладная",ИспользоватьВДокументах=0,ФильтрКонтрагент=Неопределено) Экспорт
	
		Элементы = Форма.Элементы;
		тблПечатныеФормы = НайтиПечФормы(элементСпрСС,ФильтрКонтрагент);
		
		Если  Элементы.Найти("ГруппаПечатныеКоманды")=Неопределено Тогда
			Возврат;
		КонецЕслИ;
		
		Если ИспользоватьВДокументах = 1 Тогда
			флтВидДок = Перечисления.ВидыДокументовДЛяПечФорм.Приход;
		ИНачеЕсли ИспользоватьВДокументах = 2 Тогда
			флтВидДок = Перечисления.ВидыДокументовДЛяПечФорм.Расход;
		иначе
			флтВидДок = Неопределено;
		КонецЕсли;
		
		соо = Новый Соответствие;
		ДЛя каждого Стр из тблПечатныеФормы Цикл
			//Если ЗначениеЗаполнено(Стр.ПечФорма)=Ложь Тогда Продолжить; КонецЕсли;
			Если флтВидДок<>Неопределено Тогда
				Если  ЗначениеЗаполнено(Стр.ИспользоватьВДокументах) 
					и Стр.ИспользоватьВДокументах<>Перечисления.ВидыДокументовДЛяПечФорм.Все
					и Стр.ИспользоватьВДокументах<>флтВидДок 
				Тогда Продолжить; КонецЕсли;
			КонецЕСлИ;
			
			Соо.Вставить("кнПечФорм"+Стр.Код,Стр.наименование);
		КонецЦикла;
		
		Если соо.Количество()=0 Тогда
			Соо.вставить("МакетПоУмолчанию",ИмяМакетПоУмолчанию);
		КонецЕСли;
		
		масУдл = Новый МАссив;
		Для каждого Эл из Элементы.ГруппаПечатныеКоманды.ПодчиненныеЭлементы Цикл
			Если Соо.Получить(Эл.Имя)=Неопределено Тогда
				масУдл.Добавить(Эл);
			ИНАче
				Соо.Удалить(Эл.Имя);
			КонецЕСЛИ;
		КонецЦикла;
		
		Для каждого Эл из МасУдл Цикл
			Элементы.Удалить(Эл);
		КонецЦиклА;
		
		Для каждого ЭлСоо из Соо Цикл
			
			Если Форма.Команды.НАйти(ЭлСоо.Ключ)=Неопределено Тогда
				Кмд = Форма.Команды.Добавить(ЭлСоо.Ключ);
				Кмд.Действие = "Печать";
				Кмд.Заголовок = ЭлСоо.Ключ;	
			КонецЕсли;
			
			
			ЭЛ = Элементы.Добавить(ЭлСоо.Ключ,Тип("КнопкаФормы"),Элементы.ГруппаПечатныеКоманды);
			Эл.Вид = ВидКнопкиФормы.ОбычнаяКнопка;
			Эл.Заголовок = ЭлСоо.значение;
			Эл.ИмяКоманды = ЭлСоо.Ключ;
			
		КонецЦикла;
	
КонецПроцедуры
	
	
Функция ПечатьПоКодуФормы(ссДок,код,КА=неопределено) Экспорт
	
	имяМетаДок = ссДок.Метаданные().Имя;
		
	код = СтрЗаменить(код,"кнПечФорм","");
	Если код = "МакетПоУмолчанию" Тогда
		Код = "Накладная "+ссДок.номер;
		Возврат Документы[имяМетаДок].ПечатьНакладная(ссДок,Справочники.ПечатныеФормы.ПолучитьМакет("Макет"));
	КонецЕСЛИ;
	
	сс = Справочники.ПечатныеФормы.НайтиПоКоду(код);
	Если сс.Пустая() ТОгда
		Сообщить("Не найден код: "+код);
		Возврат Неопределено;
	КонецЕСли;
	
	ссНаименование = сс.Наименование;
	
	Если КА<>Неопределено ТОгда
		нс = Сс.ФормыПоКонтрагентам.Найти(КА,"Контрагент");
		Если нс<>Неопределено Тогда
			сс = нс;
		КонецЕСли;
	КонецЕСлИ;
	
	Если нрег(прав(сс.ИмяФайлаОбработки,4)) = ".mxl" Тогда
		
		ДвоичныеДанные = сс.хрОбработкаПечати.Получить();
		Поток = ДвоичныеДанные.ОткрытьПотокДляЧтения();
		Макет = Новый ТабличныйДокумент;
		Макет.Прочитать(Поток);
		Поток.Закрыть();
	
		Код = ссНаименование+ссДок.номер;
		Возврат Документы[имяМетаДок].ПечатьНакладная(ссДок,Макет,сс);
		
	КонецЕслИ;
	
	
	Сообщить("неопознанный файл "+сс.ИмяФайлаОбработки );
	Возврат НЕопределено;
	
КонецФункции

Процедура ЗаполнитьПодписантов(Стк,сс) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ПечатныеФормыПодписи.ФизЛицо.Фамилия КАК ФизЛицоФамилия,
	               |	ПОДСТРОКА(ПечатныеФормыПодписи.ФизЛицо.Имя, 1, 1) КАК ФизЛицоИмя,
	               |	ПОДСТРОКА(ПечатныеФормыПодписи.ФизЛицо.Отчество, 1, 1) КАК ФизЛицоОтчество
	               |ИЗ
	               |	Справочник.ПечатныеФормы.Подписи КАК ПечатныеФормыПодписи
	               |ГДЕ
	               |	ПечатныеФормыПодписи.Ссылка = &Ссылка
	               |	И ПечатныеФормыПодписи.ФизЛицо <> Значение(Справочник.ФизическиеЛица.ПустаяСсылка) ";
	Выб = Запрос.Выполнить().Выбрать();
	
	ном = 0;
	Пока Выб.Следующий() Цикл
		ном=ном+1;
		имя = Выб.ФизЛицоФамилия+" "+Выб.ФизЛицоИмя+"."+Выб.ФизЛицоОтчество+".";
		Стк.вставить("Подписант"+ном,имя);
	КонецЦикла;
	
КонецПроцедуры

#Область Печать

Функция ДанныеДляПечати1(ссМас,НуженКодR3=Ложь,НуженСкладR3=Ложь,НуженИнвНомер=Ложь,ссПечФормы=Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	роЗаказНаряд.Номер КАК НомерЗаказа0,
	               |	роЗаказНаряд.НомерОборудования КАК НомерОборудования0,
	               |	роЗаказНаряд.ОборудованиеПримечание КАК ОборудованиеПримечание,
	               |	роЗаказНаряд.Оборудование.Код КАК ОборудованиеКод,
	               |	CASE WHEN &НуженКодR3=true    THEN роЗаказНаряд.Оборудование.КодR3 ELSE 0 END КАК КодR3,
	               |	CASE WHEN &НуженСкладR3=true  THEN роЗаказНаряд.ИдентификаторСкладаR3 ELSE 0 END КАК ИдентификаторСкладаR3,
	               |	CASE WHEN &НуженИнвНомер=true THEN роЗаказНаряд.ИнвНомер ELSE 0 END КАК ИнвНомер,
	               |	CASE WHEN роЗаказНаряд.Плательщик = Значение(Справочник.Контрагенты.ПустаяСсылка) 
				   |         THEN ДокОтг.ссылка.Контрагент.НаименованиеДляТТН 
				   |         ELSE роЗаказНаряд.Плательщик.НаименованиеДляТТН 
				   |         END КАК Плательщик,
	               |	роЗаказНаряд.Заключение.ТекстВТТН КАК ТекстВТТН,
	               |	роЗаказНаряд.Масса КАК Масса,
	               |	ДокОтг.ссылка.Контрагент КАК Контрагент,
	               |	ДокОтг.ссылка.Подписант КАК каФИО,
	               |	ДокОтг.ссылка.ПодписантДолжность КАК каДлж,
	               |	ДокОтг.ссылка.Дата КАК ДатаДок,
	               |	ДокОтг.ссылка.Номер КАК Номер,
	               |	ДокОтг.ссылка.ТС КАК ТС,
	               |	ДокОтг.ссылка.ГосНомер КАК ГосНомер,
	               |	ДокОтг.ссылка.ВодительФИО КАК ВодительФИО,
	               |	ДокОтг.ссылка.КонтролерСТК.Наименование КАК КонтролерСТК,
	               |	ДокОтг.ссылка.КонтролерСТК.Должность    КАК длжКонтролерСТК,
	               |	ДокОтг.ссылка.Ответственный.Наименование КАК Ответственный,
	               |	роЗаказНаряд.Оборудование.Наименование КАК ОборудованиеНаименование,
				   |    1 Количество,
	               |	роЗаказНаряд.Оборудование.ЕдиницаИзмерения КАК ЕдИзм
	               |ИЗ
				   |   Документ.ро_Отгрузка.ЗаказНаряды ДокОтг
	        	   |INNER JOIN 	Документ.роЗаказНаряд КАК роЗаказНаряд ON докОтг.ЗаказНаряд = роЗаказНаряд.ссылка
			//	   |   Документ.ро_ПриходОборудования.Оборудования ДокОтг
	        //     |INNER JOIN 	Документ.роЗаказНаряд КАК роЗаказНаряд ON докОтг.ДокЗаказНаряд = роЗаказНаряд.ссылка
	               |ГДЕ
	               |	ДокОтг.Ссылка в (&Ссылка)";
	
	Запрос.УстановитьПараметр("ссылка",ссМас);
	Запрос.УстановитьПараметр("НуженКодR3",НуженКодR3);
	Запрос.УстановитьПараметр("НуженСкладR3",НуженСкладR3);
	Запрос.УстановитьПараметр("НуженИнвНомер",НуженИнвНомер);
	
	Если ТипЗнч(ссМас)=Тип("Массив") Тогда
		пСс = ссМас[0];
	иначе
		пСс = ссМас;
	КонецЕсли;
	
	Если ТипЗнч(пСс) = Тип("ДокументСсылка.ро_ПриходОборудования") ТОгда
		Запрос.Текст=СтрЗаменить(Запрос.Текст,"Документ.ро_Отгрузка.ЗаказНаряды","Документ.ро_ПриходОборудования.Оборудования");
		Запрос.Текст=СтрЗаменить(Запрос.Текст,"докОтг.ЗаказНаряд","докОтг.ДокЗаказНаряд");
	КонецеСЛИ;
	
	
	Если ссПечФормы<>Неопределено Тогда
		а=0;
		Для каждого стрФлт из ссПечФормы.ФильтрЗапроса Цикл
			а=а+1;
			Запрос.Текст = Запрос.Текст + СтрЗаменить(нрег(стрФлт.СтрокаФильтра),"&зн","&зн"+а);
			Запрос.УстановитьПараметр("зн"+а,стрФлт.ЗнФильтра);
		КонецЦикла;
	КонецЕсли;
	
	Тбл = запрос.Выполнить().Выгрузить();
	ТБл.Колонки.Добавить("НомерОборудования");
	ТБл.Колонки.Добавить("НомерЗаказа");
	
	
	Т = Тбл.Скопировать(,"ОборудованиеНаименование,КодR3,ИдентификаторСкладаR3,Плательщик,ТекстВТТН,ОборудованиеПримечание");
	Т.Свернуть("ОборудованиеНаименование,КодR3,ИдентификаторСкладаR3,Плательщик,ТекстВТТН,ОборудованиеПримечание","");
	Для каждого С из Т Цикл
		Мас = Тбл.НайтиСтроки(Новый Структура("ОборудованиеНаименование,КодR3,ИдентификаторСкладаR3,Плательщик,ТекстВТТН,ОборудованиеПримечание",с.ОборудованиеНаименование,с.КодR3,с.ИдентификаторСкладаR3,с.Плательщик,с.ТекстВТТН,с.ОборудованиеПримечание));
		пСтр = "";
		пЗак = "";
		Для каждого Эл из Мас Цикл
			пСтр = пСтр + ","+эл.НомерОборудования0;
			пЗак = пЗак + ","+эл.НомерЗаказа0;
		КонецЦикла;
		пСтр = Сред(пСтр,2);
		пЗак = Сред(пЗак,2);
		
		Если СокрЛП(С.ТекстВТТН)<>"" Тогда
			пСтр = ""+С.ТекстВТТН+": "+пСтр;
		КонецЕсли;
		
		Для каждого Эл из Мас Цикл
			Эл.НомерОборудования = пСтр;
			Эл.НомерЗаказа = пЗак;
		КонецЦикла;
		
	КонецЦикла;
	
	стрСвр = "";
	ДЛя каждого Кол из ТБл.Колонки Цикл
		Если Найти(",номероборудования0,номерзаказа0,количество,",","+нрег(кол.имя)+",")<>0 Тогда Продолжить; КонецЕСлИ;
		стрСвр = СтрСвр +","+Кол.Имя;
	КонецЦикла;
	
	Тбл.свернуть(Сред(Стрсвр,2),"Количество");
	
	
	ТБл.Колонки.Добавить("Дата");
	ТБл.Колонки.Добавить("ДатаМес");
	ТБл.Колонки.Добавить("каФИОРП");
	ТБл.Колонки.Добавить("КонтролерСТКРП");
	Для каждого Стр из Тбл Цикл
		стр.Дата = Формат(Стр.ДатаДок,"ДФ=dd.MM.yyyy");
		стр.ДатаМес = Формат(Стр.ДатаДок,"ДФ='dd MMMM yyyy'");
		
		Стр.КонтролерСТК = СПравочники.ФизическиеЛица.ФИОстр(Стр.КонтролерСТК);
		Стр.КонтролерСТКРП = глСервер.ПросклонятьРП(Стр.КонтролерСТК);
		
		Стр.Ответственный = СПравочники.ФизическиеЛица.ФИОстр(Стр.Ответственный);
		
		Стр.каФИО = СПравочники.ФизическиеЛица.ФИОстр(Стр.каФИО);
		Стр.каФИОРП = глСервер.ПросклонятьРП(Стр.каФИО);
		прервать;
	КонецЦикла;
	
	
	
	Возврат Тбл;
	
	
КонецФункции


Функция ДанныеДляПечати(ссМас,МасКол,сткШапка,ссПечФормы=Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	роЗаказНаряд.Номер КАК НомерЗаказа0,
	               |	CASE WHEN НомерОборудованияКор="""" THEN роЗаказНаряд.НомерОборудования ELSE НомерОборудованияКор END КАК НомерОборудования0,
	               |	CASE WHEN ИнвНомерКор="""" THEN роЗаказНаряд.ИнвНомер ELSE ИнвНомерКор END КАК ИнвНомер,
	               |	роЗаказНаряд.ОборудованиеПримечание КАК ОборудованиеПримечание,
	               |	роЗаказНаряд.Оборудование.Код КАК ОборудованиеКод,
	               |	роЗаказНаряд.Оборудование.КодR3 КАК КодR3,
	               |	роЗаказНаряд.ИдентификаторСкладаR3 КАК ИдентификаторСкладаR3,
	               |	CASE WHEN роЗаказНаряд.Плательщик = Значение(Справочник.Контрагенты.ПустаяСсылка) 
				   |         THEN ДокОтг.ссылка.Контрагент.НаименованиеДляТТН 
				   |         ELSE роЗаказНаряд.Плательщик.НаименованиеДляТТН 
				   |         END КАК Плательщик,
	               |	роЗаказНаряд.Заключение.ТекстВТТН КАК ТекстВТТН,
	               |	роЗаказНаряд.Масса КАК Масса,
	               |	ДокОтг.ссылка.Контрагент.НаименованиеПолное КАК Контрагент,
				   |    ДокОтг.ссылка.Организация.НаименованиеПолное КАК Организация,
	               |	ДокОтг.ссылка.Контрагент.Адрес КАК АдресКА,
	               |	ДокОтг.ссылка.Подписант КАК каФИО,
	               |	ДокОтг.ссылка.ПодписантДолжность КАК каДлж,
	               |	ДокОтг.ссылка.Дата КАК ДатаДок,
	               |	ДокОтг.ссылка.Номер КАК Номер,
	               |	ДокОтг.ссылка.Ответственный.Наименование КАК Ответственный,
	               |	ISNULL(ДокПриход.Дата,ДокОтг.ссылка.Дата) КАК ДатаПрх,
	               |	роЗаказНаряд.Оборудование.Наименование КАК ОборудованиеНаименование,
	               |	роЗаказНаряд.Оборудование.ЕдиницаИзмерения КАК ЕдИзм,
				   
				   |	ДокОтгШапка.Дата КАК датаОтг,
				   |	ДокОтгШапка.ТС КАК ТС,
				   |	ДокОтгШапка.ГосНомер КАК ГосНомер,
				   |	ДокОтгШапка.ВодительФИО КАК ВодительФИО,
				   |	ДокОтг.ссылка.КонтролерСТК.Наименование КАК КонтролерСТК,
				   |	ДокОтг.ссылка.КонтролерСТК.Должность    КАК длжКонтролерСТК,
				   
				   |    1 Количество
	               |ИЗ
				   |   Документ.ро_Отгрузка.ЗаказНаряды ДокОтг
	        	   |INNER JOIN 	Документ.роЗаказНаряд КАК роЗаказНаряд 			ON докОтг.ЗаказНаряд   = роЗаказНаряд.ссылка
				   |LEFT OUTER JOIN Документ.ро_Отгрузка ДокОтгШапка         	ON ДокОтгШапка.ссылка  = роЗаказНаряд.ДокОтгрузки
				   |LEFT OUTER JOIN Документ.ро_ПриходОборудования ДокПриход   	ON ДокПриход.ссылка    = роЗаказНаряд.ДокументПоступление
				   |LEFT OUTER JOIN Справочник.ро_ИдентификаторСкладаЗаказчика СпрИдСкл ON СпрИдСкл.ссылка = роЗаказНаряд.ИдентификаторСкладаR3 и СпрИдСкл.НаименованиеЗаказчикаНаПечать <> """"
				   |
	               |ГДЕ
	               |	ДокОтг.Ссылка в (&Ссылка)";
	
	Запрос.УстановитьПараметр("ссылка",ссМас);
	
	Если ТипЗнч(ссМас)=Тип("Массив") Тогда
		пСс = ссМас[0];
	иначе
		пСс = ссМас;
	КонецЕсли;
	
	Если ТипЗнч(пСс) = Тип("ДокументСсылка.ро_ПриходОборудования") ТОгда
		Запрос.Текст=СтрЗаменить(Запрос.Текст,"Документ.ро_Отгрузка.ЗаказНаряды","Документ.ро_ПриходОборудования.Оборудования");
		Запрос.Текст=СтрЗаменить(Запрос.Текст,"Документ.ро_Отгрузка","Документ.ро_ПриходОборудования");
		Запрос.Текст=СтрЗаменить(Запрос.Текст,"докОтг.ЗаказНаряд","докОтг.ДокЗаказНаряд");
	ИНачеЕсли ТипЗнч(пСс) = Тип("ДокументСсылка.ро_Реестры") ТОгда
		Запрос.Текст=СтрЗаменить(Запрос.Текст,"Документ.ро_Отгрузка.ЗаказНаряды","Документ.ро_Реестры.ЗаказНаряды");
	КонецеСЛИ;
	
	
	Если ссПечФормы<>Неопределено Тогда
		а=0;
		Для каждого стрФлт из ссПечФормы.ФильтрЗапроса Цикл
			а=а+1;
			Запрос.Текст = Запрос.Текст + СтрЗаменить(нрег(стрФлт.СтрокаФильтра),"&зн","&зн"+а);
			Запрос.УстановитьПараметр("зн"+а,стрФлт.ЗнФильтра);
		КонецЦикла;
	КонецЕсли;
	
	Тбл = запрос.Выполнить().Выгрузить();
	ТБл.Колонки.Добавить("НомерОборудования");
	ТБл.Колонки.Добавить("НомерЗаказа");
	
	Если МасКол.Найти("номероборудования")<>Неопределено или МасКол.Найти("номерзаказа")<>Неопределено Тогда
		Т = Тбл.Скопировать(,"ОборудованиеНаименование,КодR3,ИдентификаторСкладаR3,Плательщик,ТекстВТТН,ОборудованиеПримечание,инвНомер");
		Т.Свернуть("ОборудованиеНаименование,КодR3,ИдентификаторСкладаR3,Плательщик,ТекстВТТН,ОборудованиеПримечание,инвНомер","");
		Для каждого С из Т Цикл
			Мас = Тбл.НайтиСтроки(Новый Структура("ОборудованиеНаименование,КодR3,ИдентификаторСкладаR3,Плательщик,ТекстВТТН,ОборудованиеПримечание,инвНомер",с.ОборудованиеНаименование,с.КодR3,с.ИдентификаторСкладаR3,с.Плательщик,с.ТекстВТТН,с.ОборудованиеПримечание,с.инвНомер));
			пСтр = "";
			пЗак = "";
			Для каждого Эл из Мас Цикл
				Если СокрЛП(эл.НомерОборудования0)<>"" Тогда
					пСтр = пСтр + ","+СокрЛП(эл.НомерОборудования0);
				КонецеСЛИ;
				Если СокрЛП(эл.НомерЗаказа0)<>"" Тогда
					пЗак = пЗак + ","+СокрЛП(эл.НомерЗаказа0);
				КонецеСЛИ;
			КонецЦикла;
			пСтр = Сред(пСтр,2);
			пЗак = Сред(пЗак,2);
			
			Если СокрЛП(С.ТекстВТТН)<>"" Тогда
				пСтр = ""+С.ТекстВТТН+": "+пСтр;
			КонецЕсли;
			
			Для каждого Эл из Мас Цикл
				Эл.НомерОборудования = пСтр;
				Эл.НомерЗаказа = пЗак;
			КонецЦикла;
			
		КонецЦикла;
	КонецЕсли;
	
	
	Для каждого Стр из Тбл Цикл
		сткШапка.вставить("Дата",Формат(Стр.ДатаДок,"ДФ=dd.MM.yyyy"));
		сткШапка.вставить("ДатаПриход",Формат(Стр.ДатаПрх,"ДФ=dd.MM.yyyy"));
		сткШапка.вставить("ДатаМес",Формат(Стр.ДатаДок,"ДФ='dd MMMM yyyy'"));
		
		сткШапка.вставить("КонтролерСТК",СПравочники.ФизическиеЛица.ФИОстр(Стр.КонтролерСТК));
		сткШапка.вставить("КонтролерСТКРП",глСервер.ПросклонятьРП(Стр.КонтролерСТК));
		сткШапка.вставить("длжКонтролерСТКРП",глСервер.ПросклонятьРП(Стр.длжКонтролерСТК));
		
		сткШапка.вставить("Ответственный",СПравочники.ФизическиеЛица.ФИОстр(Стр.Ответственный));
		
		сткШапка.вставить("каФИО",СПравочники.ФизическиеЛица.ФИОстр(Стр.каФИО));
		сткШапка.вставить("каФИОРП",глСервер.ПросклонятьРП(Стр.каФИО));
		сткШапка.вставить("каДлжРП",глСервер.ПросклонятьРП(Стр.каДлж));
		
		Если  СокрЛП(сткШАпка.каФИОРП)="" Тогда  сткШАпка.каФИОРП = "_________________________________"; КонецЕСлИ;
		Если  СокрЛП(сткШАпка.каДлжРП)="" Тогда  сткШАпка.каДлжРП = "_________________________________"; КонецЕСлИ;
		
		Если ТипЗнч(пСс) = Тип("ДокументСсылка.ро_ПриходОборудования") ТОгда 
			сткШапка.вставить("Получатель",Стр.Организация);
			сткШапка.вставить("Отправитель",Стр.Контрагент);
			сткШапка.вставить("ИсполнительСдалПринял","принял");
			сткШапка.вставить("ЗаказчикСдалПринял","сдал");
			сткШапка.вставить("СдалПринял","принял на капитальный ремонт");
		ИНаче
			сткШапка.вставить("Получатель",Стр.Контрагент);
			сткШапка.вставить("Отправитель",Стр.Организация);
			сткШапка.вставить("ИсполнительСдалПринял","сдал");
			сткШапка.вставить("ЗаказчикСдалПринял","принял");
			сткШапка.вставить("СдалПринял","сдал из капитального ремонта");
		КонецЕсли;
		
		
		
		
		прервать;
	КонецЦикла;
	
	стрСвр = "";
	ДЛя каждого Кол из ТБл.Колонки Цикл
		Если МасКол.НАйти(НРЕГ(Кол.Имя))=Неопределено или НРЕГ(Кол.Имя)="количество" Тогда Продолжить; КонецЕСЛИ;
		стрСвр = СтрСвр +","+Кол.Имя;
	КонецЦикла;
	
	Тбл.свернуть(Сред(Стрсвр,2),"Количество");
	
	сткШапка.Вставить("итКол",Тбл.Итог("Количество"));
	
	Возврат Тбл;
	
	
КонецФункции

Функция ПолучитьМассивПараметров(Таб) экспорт
	
	Мас = Новый Массив;
	ДЛя а=1 по Таб.ВысотаТаблицы Цикл
		Для б=1 по Таб.ШиринаТаблицы Цикл
			Обл = Таб.Область(а,б,а,б);
			ЕСли Обл.Заполнение = ТипЗаполненияОбластиТабличногоДокумента.Параметр Тогда
				Мас.добавить(НРЕГ(Обл.Параметр));
			ИНАчеЕсли Обл.Заполнение = ТипЗаполненияОбластиТабличногоДокумента.Шаблон Тогда
				пСтр = СтрЗаменить(" "+Обл.Текст,"[",Символы.ПС);
				пСтр = СтрЗаменить(пСтр,"]",Символы.ПС);
				Для i=2 по СтрЧислоСтрок(пСтр) Цикл
					Мас.добавить(НРЕГ(СокрЛП(СтрПолучитьСтроку(пСтр,i))));
					i=i+1;
				КонецЦикла;
			КонецЕСлИ;
		Конеццикла;
	Конеццикла;
	
	Возврат Мас;
	
КонецФункции

Функция ПечатьНакладная(Мас,Макет,ссПечФормы=Неопределено) Экспорт
	
	НуженКодR3    = Ложь; тКодR3    = НРЕГ("КодR3");
	НуженСкладR3  = Ложь; тСкладR3  = НРЕГ("ИдентификаторСкладаR3");
	НуженИнвНомер = Ложь; тИнвНомер = НРЕГ("ИнвНомер");
	
	
	СткШапка=Новый Структура();
	МасКол = ПолучитьМассивПараметров(Макет);
	ТБл = ДанныеДляПечати(Мас,МасКол,СткШапка,ссПечФормы);
	
	
	Таб = Новый ТабличныйДокумент;
	Таб.КлючПараметровПечати = "роПечатьНакладная";
	Если Тбл.Количество()=0 ТОгда Возврат Таб; КонецЕсли;
	
	
	Обл = Макет.ПолучитьОбласть("Шапка");
	Обл.Параметры.Заполнить(Тбл[0]);
	Обл.Параметры.Заполнить(СткШапка);
	Таб.Вывести(Обл);
	
	
	Обл = Макет.ПолучитьОбласть("Строка");
	
	СткНом = Новый Структура("ном",0);
	Для каждого Стр из Тбл Цикл
		сткНом.ном=сткНом.Ном+1;
		Обл.Параметры.Заполнить(Стр);
		Обл.Параметры.Заполнить(СткНом);
		Таб.Вывести(Обл);
	КонецЦикла;
	
	Обл = Макет.ПолучитьОбласть("Подвал");
	
	Обл.Параметры.Заполнить(Тбл[0]);
	Обл.Параметры.Заполнить(СткШапка);
	
	Таб.Вывести(Обл);
	Таб.ТолькоПросмотр = Истина;
	Таб.АвтоМасштаб= Истина;
	Таб.ОтображатьГруппировки = Ложь;
	Таб.ОтображатьЗаголовки = Ложь;
	Таб.ОтображатьСетку = Ложь;
	
	Возврат Таб;
	
	
	
	
КонецФункции

#КонецОбласти

