

Процедура Загрузить()
	
	оТбл = Справочники.Контрагенты.СделатьЗапрос("LOADKA");
	
	ТБлКА.Очистить();
	
	Для каждого оСтр из оТбл Цикл
		Стр = ТблКА.Добавить();
		Стр.Код = остр.Код;
		Стр.Наименование = СокрЛП(оСтр.Наименование);
		
		стр.ГУИД =  оСтр.ВладелецGUID;
		Гуид = Новый УникальныйИдентификатор(стр.ГУИД);
		сс = Справочники.Контрагенты.ПолучитьСсылку(ГУИД);
		Если НАйти(СокрЛП(сс),"<Объект не найден") ТОгда
			Стр.Действие = "Новый"; 
		ИНАче
			Стр.Действие = "Обновить";
		КонецЕСЛИ;
		
		стр.индПоиск = нрег(Стр.наименование);
		
	КонецЦиклА;
	
	ТБлКА.Сортировать("Наименование"); 
	
	
				   
	
КонецПроцедуры


&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Загрузить();
КонецПроцедуры


&НаКлиенте
Процедура Обновить(Команда)
	Загрузить();
КонецПроцедуры

&НасервереБезКонтекста
Функция ТблКАВыборНасервере(ГУИД)
	
	Возврат Справочники.Контрагенты.ЗагрузитьКА(ГУИД);
	
КонецФункции

&НаКлиенте
Процедура ТблКАВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	                             
	СтандартнаяОБработка = Ложь;
	сс = ТблКАВыборНасервере(Элементы.ТблКА.ДанныеСтроки(Выбраннаястрока).ГУИД);
	Если сс<>Неопределено Тогда
		Элементы.ТблКА.ДанныеСтроки(Выбраннаястрока).Действие = "Обновить";
		ОповеститьОбИзменении(сс);
	КонецЕСЛИ;
	
 КонецПроцедуры
 

 
&НаКлиенте
Процедура ФильтрСтрокаПриИзменении(Элемент)
	ФильтрСтрока = "";
КонецПроцедуры

&НаКлиенте
Процедура ФильтрСтрокаАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	пДЛ = СтрДлина(Текст);
	пТекст = нрег(Текст);
	Если пДл=0 ТОгда Возврат; КонецЕсли;
	
	Для каждого Стр из ТблКА Цикл
		Если Лев(Стр.индПоиск,пДл) = пТекст Тогда
			Элементы.ТблКА.ТекущаяСтрока= стр.ПолучитьИдентификатор();
			прервать;
		КонецЕСлИ;
	КонецЦикла;
КонецПроцедуры

