
&НаСервере
Процедура РасходныйАктНаСервере(Дата1,Дата2,КА,Орг,каРеестр,имяМакета)
	
	СохранитьНастройки();
	Результат.Очистить();
	
	Запрос = новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ро_Реестры.Ссылка КАК Ссылка
	               |ИЗ
	               |	Документ.ро_Реестры КАК ро_Реестры
	               |ГДЕ
	               |	ро_Реестры.Проведен = Истина
	               |	И ро_Реестры.Дата >= &Дата1
	               |	И ро_Реестры.Дата < &Дата2
	               |	И ро_Реестры.Контрагент = &Контрагент";
	Запрос.УстановитьПараметр("Дата1",Дата1);
	Запрос.УстановитьПараметр("Дата2",Дата2);
	Запрос.УстановитьПараметр("Контрагент",каРеестр);
	
	Мас = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	Если Мас.Количество()=0 ТОгда
		Возврат;
	КонецеСЛИ;
	
	ОбкОтчет = РеквизитФормыВЗначение("Отчет");
	Макет = обкОтчет.ПолучитьМакет(имяМакета);
	//сс = Справочники.ПечатныеФормы.НайтиПоКоду("000000034");
	//ДвоичныеДанные = сс.хрОбработкаПечати.Получить();
	//Поток = ДвоичныеДанные.ОткрытьПотокДляЧтения();
	//Макет = Новый ТабличныйДокумент;
	//Макет.Прочитать(Поток);
	//Поток.Закрыть();
	//
	
	сткШапка = новый Структура;
	сткШапка.вставить("каФИО",Отчет.Подписант);
	сткШапка.вставить("каДлж",Отчет.ПодписантДолжность);
	сткШапка.вставить("каФИОРП",глСервер.ПросклонятьРП(сткШапка.каФИО));
	сткШапка.вставить("каДлжРП",глСервер.ПросклонятьРП(сткШапка.каДлж));
	
	сткШапка.вставить("КонтролерСТК",СПравочники.ФизическиеЛица.ФИОстр(Отчет.Ответственный));
	сткШапка.вставить("КонтролерСТКРП",глСервер.ПросклонятьРП(сткШапка.КонтролерСТК));
	сткШапка.вставить("длжКонтролерСТК",Отчет.Ответственный.Должность);
	сткШапка.вставить("длжКонтролерСТКРП",глСервер.ПросклонятьРП(сткШапка.длжКонтролерСТК));
	
	сткШапка.вставить("Ответственный",сткШапка.КонтролерСТК);
	
	
	
	
	Если  СокрЛП(сткШАпка.каФИОРП)="" Тогда  сткШАпка.каФИОРП = "_________________________________"; КонецЕСлИ;
	Если  СокрЛП(сткШАпка.каДлжРП)="" Тогда  сткШАпка.каДлжРП = "_________________________________"; КонецЕСлИ;
	
	сткШапка.вставить("Получатель",КА.НаименованиеПолное);
	сткШапка.вставить("Отправитель",Орг.НаименованиеПолное);
	сткШапка.вставить("Контрагент",КА.НаименованиеПолное);
	сткШапка.вставить("Организация",Орг.НаименованиеПолное);
	
		
		
	Таб = Справочники.ПечатныеФормы.ПечатьНакладная(мас,Макет,,сткШапка);
	
	Результат.Вывести(Таб);
	
	
КонецПроцедуры

&НаКлиенте
Процедура РасходныйАкт(Команда)
	
	
	РасходныйАктНаСервере(Отчет.Дата1,Отчет.Дата2,Отчет.Контрагент,Отчет.Организация,Отчет.КонтрагентРеестр,Команда.Имя);
	//Если Рез = Неопределено Тогда
	//	ПоказатьПредупреждение(,"Нет реестров по контрагенту "+Контрагент);
	//КонецЕСли;
	
	
КонецПроцедуры


&НаСервере
Процедура СохранитьНастройки()
	
	ОбкОтчет = РеквизитФормыВЗначение("Отчет");
	
	Стк = Новый Структура();
	Для каждого эл из ОбкОтчет.Метаданные().Реквизиты Цикл
		Если Найти(",Дт,Дт1,НастройкаГруппСКД,",","+Эл.Имя+",") <> 0 Тогда Продолжить; КонецЕсли;
		Если ТипЗнч(Отчет[Эл.Имя]) = Тип("СписокЗначений") Тогда
			Стк.Вставить(Эл.Имя, Отчет[Эл.Имя].Скопировать());
		ИНаче
			Стк.Вставить(Эл.Имя, Отчет[Эл.Имя]);
		КонецЕСЛИ;
	КонецЦикла;
	
	ХранилищеВариантовОтчетов.Сохранить(ЭтаФорма.ИмяФормы,,Стк,,ИмяПользователя());
	
КонецПроцедуры

&НаСервере
Процедура ОткрытьНастройки()
	
	ОбкОтчет = РеквизитФормыВЗначение("Отчет");
	
	Стк = ХранилищеВариантовОтчетов.Загрузить(ЭтаФорма.ИмяФормы,,,ИмяПользователя());
	Если ТипЗнч(Стк) <> Тип("Структура") ТОгда Возврат; КонецЕсли;
	
	Для каждого Эл из Стк Цикл
		Если ТипЗнч(ОбкОтчет[Эл.Ключ])=Тип("СписокЗначений") Тогда
			Для каждого элСпк из ОбкОтчет[Эл.Ключ] Цикл
				нс = Эл.Значение.НайтиПоЗначению(элСпк.Значение);
				Если нс<>Неопределено Тогда
					элСпк.пометка = нс.Пометка;
				КонецЕСЛИ;
			КонецЦикла;
			
		Иначе
			Отчет[Эл.Ключ] = Эл.Значение;
		КонецеСЛИ;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПриОткрытииНаСервере()
	ОткрытьНастройки();
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ПриОткрытииНаСервере();
КонецПроцедуры

&НаСервереБезКонтекста
Функция Контрагент_Реквизиты(сс)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Контрагенты.ПунктПогрузки КАК ПунктПогрузки,
	               |	Контрагенты.Подписант КАК Подписант,
	               |	Контрагенты.ПодписантДолжность КАК ПодписантДолжность
	               |ИЗ
	               |	Справочник.Контрагенты КАК Контрагенты
	               |ГДЕ
	               |	Контрагенты.Ссылка = &Ссылка";
	Запрос.УстановитьПараметр("Ссылка",Сс);
	Тбл = Запрос.Выполнить().Выгрузить();
	
	Стк = Новый Структура;
	Для каждого Кол из ТБл.Колонки Цикл
		Стк.вставить(Кол.имя,ТБл[0][Кол.имя]);
	Конеццикла;
	
	
	Возврат Стк;
	
КонецФункции


&НаКлиенте
Процедура КонтрагентПриИзменении(Элемент)
	Стк = Контрагент_Реквизиты(Отчет.Контрагент);
	Отчет.Подписант = Стк.Подписант;
	Отчет.ПодписантДолжность = Стк.ПодписантДолжность;
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьПериод(Команда)
	                                                                               
	ПараметрыВыбора = Новый Структура("НачалоПериода,КонецПериода,ВыборКварталов", Отчет.Дата1, Отчет.Дата2, ложь);
	ОписаниеОповещения = Новый ОписаниеОповещения("ВыбратьПериодЗавершение", ЭтотОбъект);
	ОткрытьФорму("ОбщаяФорма.ВыборСтандартногоПериодаМесяц", ПараметрыВыбора, , , , , ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьПериодЗавершение(РезультатВыбора, ДопПараметры) Экспорт
	
	ЕСли РезультатВыбора=Неопределено Тогда Возврат; КонецЕсли;
	
	Отчет.Дата1 = РезультатВыбора.НачалоПериода;
	Отчет.Дата2 = РезультатВыбора.КонецПериода;

КонецПроцедуры



